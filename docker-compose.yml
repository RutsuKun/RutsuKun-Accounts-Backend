version: '3.7'
services:
    auth-api-dev:
        image: node:14.17.3
        profiles: ['development', 'jenkins-dev']
        container_name: auth-api-dev
        working_dir: '/home/auth-server-api-dev'
        volumes: 
          - ./api:/home/auth-server-api-dev
        command: 'npm run start:dev'
        restart: unless-stopped
        ports:
          - 20000:20000
        networks:
          - lan
    auth-api-prod:
        image: node:14.17.3
        profiles: ['productionn', 'jenkins-prod']
        container_name: auth-api-prod
        working_dir: '/home/auth-server-api-prod'
        volumes: 
          - ./api:/home/auth-server-api-prod
        command: 'npm run start:prod'
        restart: unless-stopped
        ports:
          - 30000:30000
        networks:
          - lan
    auth-cdn-dev:
        image: node:17.1
        container_name: auth-cdn-dev
        profiles: ['development']
        working_dir: '/home/auth-server-cdn-dev'
        volumes: 
          - ./cdn/src:/home/auth-server-cdn-dev
        command: 'node index.js'
        restart: unless-stopped
        ports:
          - 20001:20001
        networks:
          - lan
    auth-cdn-prod:
        image: node:17.1
        container_name: auth-cdn-prod
        profiles: ['production']
        working_dir: '/home/auth-server-cdn-prod'
        volumes: 
          - ./cdn/src:/home/auth-server-cdn-prod
        command: 'node index.js'
        restart: unless-stopped
        ports:
          - 30001:30001
        networks:
          - lan
    auth-nginx:
        image: nginx:1.21.4
        container_name: auth-nginx-prod
        profiles: ['production']
        volumes: 
          - ./nginx/config-prod.conf:/etc/nginx/conf.d/default.conf:rw
          - ./front:/home/auth-server-front
          - ./nginx/prod/ssl:/etc/nginx/ssl
        command: [nginx-debug, '-g', 'daemon off;']
        restart: unless-stopped
        ports:
          - 80:80
          - 443:443
        networks:
          - lan
          - public
    auth-mysql-dev:
        image: mysql:8.0.27
        container_name: auth-mysql-dev
        profiles: ['development', 'jenkins-dev']
        ports:
          - "3306:3306"
        volumes:
          - ./mysql/dev:/var/lib/mysql
        environment:
            MYSQL_DATABASE: "${MYSQL_DATABASE}"
            MYSQL_USER: "${MYSQL_USER}"
            MYSQL_PASSWORD: "${MYSQL_USER_PASS}"
            MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASS}"
        restart: unless-stopped
        networks:
            - lan
    auth-mysql-prod:
        image: mysql:8.0.27
        container_name: auth-mysql-prod
        profiles: ['production', 'jenkins-prod']
        ports:
          - "3306:3306"
        volumes:
          - ./mysql/prod:/var/lib/mysql
        environment:
            MYSQL_DATABASE: "${MYSQL_DATABASE}"
            MYSQL_USER: "${MYSQL_USER}"
            MYSQL_PASSWORD: "${MYSQL_USER_PASS}"
            MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASS}"
        restart: unless-stopped
        networks:
            - lan
    auth-status-page-dev:
        image: louislam/uptime-kuma:latest
        profiles: ['development', 'jenkins-dev']
        container_name: auth-status-page-dev
        working_dir: '/app'
        volumes:
          - ./status-page/dev:/app/data
        restart: unless-stopped
        ports:
          - 80:3001
        networks:
          - lan
    auth-status-page-prod:
        image: louislam/uptime-kuma:latest
        profiles: ['production', 'jenkins-prod']
        container_name: auth-status-page-prod
        working_dir: '/app'
        volumes:
          - ./status-page/prod:/app/data
        restart: unless-stopped
        ports:
          - 80:3001
        networks:
          - lan
networks:
    lan:
        name: AUTH_SERVER_LAN
    public:
        driver: bridge